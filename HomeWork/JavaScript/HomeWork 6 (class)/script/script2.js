// Реализовать класс, описывающий простой маркер. В классе должны быть следующие компоненты:

// поле, которое хранит цвет маркера;
// поле, которое хранит количество чернил в маркере (в процентах);
// метод для печати (метод принимает строку и выводит текст соответствующим цветом;
// текст выводится до тех пор, пока в маркере есть чернила; один не пробельный символ – это 0,5% чернил в маркере).
// Реализовать класс, описывающий заправляющийся маркер,
// унаследовав его от простого маркера и добавив метод для заправки маркера.


class Marker {
    // поле, которое хранит цвет маркера;
    // поле, которое хранит количество чернил в маркере (в процентах);
    constructor(color, quantity) {
        this.color = color
        this.quantity = quantity
    }

    // метод для печати (метод принимает строку и выводит текст соответствующим цветом;
    // текст выводится до тех пор, пока в маркере есть чернила; один не пробельный символ – это 0,5% чернил в маркере).
    writeText() {
        const text = prompt('Enter text');

        if (this.quantity > 0) {
            while (this.quantity) { 
                document.write(`<p style= color:${this.color}>${text}</p>`)
                this.quantity--;
              }
            document.write(`<p style= color:${this.color}>${text}</p>`)
        } 
        else if (this.quantity = 0) {
            document.write(`<p style= color:${this.color}></p>`)
        }
    }
}

// поле, которое хранит цвет маркера;
// поле, которое хранит количество чернил в маркере (в процентах);
const corall = new Marker('red', 20);
corall.writeText()
console.log(corall);


// Реализовать класс, описывающий заправляющийся маркер,
// унаследовав его от простого маркера и добавив метод для заправки маркера.
class reload extends Marker {
    constructor(color, quantity){
        super(color, quantity)
        this.reload = 100
    }

    reloadMarker() {
        this.quantity = 100
    }
}

corall.reloadMarker()
  
  
  